{ 
  "cosmos-installer": {
    "form": [
      {
        "name": "advanced",
        "label": "Filebrowser exposes host files ( / + /var/lib/docker/volumes ) to admins. Do you want to change this behaviour?",
        "initialValue": false,
        "type": "checkbox"
      }
      {if Context.advanced}
      , {
        "name": "mountPointRoot",
        "label": "What folder do you want to have available in Filebrowser? (Default: /)",
        "initialValue": "/",
        "type": "text"
      },
      {
        "name": "mountPointVolumes",
        "label": "What folder do you want to have available in Filebrowser? (Default: /var/lib/docker/volumes)",
        "initialValue": "/var/lib/docker/volumes",
        "type": "text"
      },
      {
        "name": "adminOnly",
        "label": "Do you want to make this service admin only?",
        "initialValue": false,
        "type": "checkbox"
      },
      {
        "name": "noAuth",
        "label": "Uncheck to enable Filebrowser authentication (defaults to using Cosmos authentication)",
        "initialValue": true,
        "type": "checkbox"
      }
    {/if}
    ],
    {if not Context.noAuth}
    "post-install": [
      {
        "type": "warning",
        "label": "A default account has been created with admin / admin as credentials. Please change them"
      }
    ],
    {/if}
    "translation": {
      "de": {
        "form.advanced.label": "Filebrowser macht dasHost-Dateisystem ( / + /var/lib/docker/volumes ) für Administratoren sichtbar. Möchten Sie dieses Verhalten ändern?",
        "form.mountPointRoot.label": "Welchen Ordner möchten Sie im Dateiexplorer zur Verfügung haben? (Standard: /)",
        "form.mountPointVolumes.label": "Welchen Ordner möchten Sie im Dateiexplorer zur Verfügung haben? (Standard: /var/lib/docker/volumes)",
        "form.adminOnly.label": "Möchten Sie diesen Dienst nur für Administratoren zugänglich machen?",
        "form.noAuth.label": "Deaktivieren Sie diese Option, um die Filebrowser-Authentifizierung zu aktivieren (standardmäßig wird Cosmos zur Authentifizierung verwendet)",
        "post-install.warning": "Es wurde ein Standardkonto mit admin / admin als Anmeldeinformationen erstellt. Bitte ändern Sie dies"
      },
      "de-CH": {
        "form.noAuth.label": "Deaktivieren Sie diese Option, um die Filebrowser-Authentifizierung zu aktivieren (standardmässig wird Cosmos zur Authentifizierung verwendet)"
      }
    }
  },
  "minVersion": "0.16.0",
  "services": {
    "{ServiceName}": {
      "image": "filebrowser/filebrowser:s6",
      "container_name": "{ServiceName}",
      "restart": "unless-stopped",
      "tty": true,
      "stdin_open": true,
      "UID": 0,
      "GID": 0,
      "environment": [
        "PUID=0",
        "PGID=0",
        "TZ=auto"
        {if Context.noAuth}
        , "FB_NOAUTH=true"
        {/if}
      ],
      "post_install": [
        "filebrowser config init --viewMode \"list\"",
        "filebrowser users add admin admin"
      ],
      "labels": {
        "cosmos-force-network-secured": "true",
        "cosmos-auto-update": "true",
        "cosmos-icon": "https://aseracorp.github.io/resiSTORE/servapps/Filebrowser/icon.png"
      },
      "volumes": [
        {
          "source": "Filebrowser-mount",
          "target": "/srv",
          "type": "volume"
        },
        {
          "source": "Filebrowser-database",
          "target": "/database",
          "type": "volume"
        },
        {
          "source": "Filebrowser-config",
          "target": "/config",
          "type": "volume"
        },
        {if not Context.advanced}
        {
          "source": "/",
          "target": "/srv/host",
          "type": "bind"
        },
        {
          "source": "/var/lib/docker/volumes",
          "target": "/srv/volumes",
          "type": "bind"
        }
        {else}
        {
          "source": "{Context.mountPointRoot}",
          "target": "/srv/host",
          "type": "bind"
        },
        {
          "source": "{Context.mountPointVolumes}",
          "target": "/srv/volumes",
          "type": "bind"
        }
        {/if}
      ],
      "routes": [
        {
          "name": "{ServiceName}",
          "description": "Expose {ServiceName} to the web",
          "useHost": true,
          "target": "http://{ServiceName}:80",
          "mode": "SERVAPP",
          "Timeout": 14400000,
          "ThrottlePerMinute": 12000,
          "BlockCommonBots": true,
          "SmartShield": {
            "Enabled": true
          },
          "AuthEnabled": true
          {if Context.adminOnly}
           , "AuthAdmin": true
          {/if}
        }
      ]
    }
  }
}
